{"version":3,"file":"internal-user-datasource.js","sources":["core/features/user/datasources/internal-datasource/internal-user-datasource.ts"],"sourceRoot":"/","sourcesContent":["import { ILoggerService } from '../../../../utils/services/logger-service/types';\nimport { Left, Right } from '../../../../utils/types';\nimport { In, Repository } from 'typeorm';\nimport UserSchema from '../../schemas/user-schema';\nimport { IInternalUserDatasource, InternalUserDatasourceError } from './types';\nimport Injectable from '../../../../utils/decorators/injectable';\nimport { inject } from 'inversify';\nimport { ObjectId } from 'mongodb';\nimport User from '../../entities/user';\n\n@Injectable('IInternalUserDatasource')\nexport default class InternalUserDatasource implements IInternalUserDatasource {\n  constructor(\n    @inject('Repository<UserSchema>') private readonly userRepository: Repository<UserSchema>,\n    @inject('ILoggerService') private readonly logger: ILoggerService\n  ) { }\n\n  async findManyByIds(userIds: string[]) {\n    try {\n      const users = await this.userRepository.findBy({ id: In(userIds) });\n      return new Right(users.map((user) => new User(user.getProps())));\n    } catch (e: any) {\n      const error = new InternalUserDatasourceError(\n        e.message || `Oops, desculpe, tivemos um problema buscando por (${userIds.join(', ')})`,\n        { ...e, userIds }\n      );\n      this.logger.error(error.message, error);\n      return new Left(error);\n    }\n  }\n\n  async findByEmail(email: string) {\n    try {\n      const user = await this.userRepository.findOneBy({ email });\n      return new Right(user);\n    } catch (e) {\n      const error = new InternalUserDatasourceError(\n        (e as any).message || `Oops, desculpe, tivemos um problema buscando por ${email}`,\n        { ...(e as any), email }\n      );\n      this.logger.error(error.message, error);\n      return new Left(error);\n    }\n  }\n\n  async findById(userId: ObjectId) {\n    try {\n      const user = await this.userRepository.findOneBy({ id: userId });\n      return new Right(user);\n    } catch (e) {\n      const error = new InternalUserDatasourceError(\n        (e as any).message || `Opa, foi mal tivemos um problema buscando pelo usuário ${userId.toString()}`,\n        { ...(e as any), userId }\n      );\n      this.logger.error(error.message, error);\n      return new Left(error);\n    }\n  }\n\n  async save(user: UserSchema) {\n    try {\n      const result = await this.userRepository.save(user);\n      result.password = undefined;\n      return new Right(result);\n    } catch (e) {\n      const error = new InternalUserDatasourceError(\n        (e as any).message || `Opa, foi mal tivemos um problema ao salvar o usuário ${user.name}`,\n        { ...(e as any), user }\n      );\n      this.logger.error(error.message, error);\n      return new Left(error);\n    }\n  }\n\n  async update(user: UserSchema) {\n    try {\n      await this.userRepository.update(user.id!, user);\n      return new Right(null);\n    } catch (e) {\n      const error = new InternalUserDatasourceError(\n        (e as any).message || `Opa, foi mal tivemos um problema para atualizar o usuário ${user.name}`,\n        { ...(e as any), user }\n      );\n      this.logger.error(error.message, error);\n      return new Left(error);\n    }\n  }\n\n  async remove(userId: ObjectId) {\n    try {\n      const user = await this.userRepository.findOneBy({ id: new ObjectId(userId) });\n      if (!user) throw new Error(`Oops, usuário ${userId.toString()} não encontrado, pode já ter sido deletado`);\n\n      const result = await this.userRepository.remove(user);\n      return new Right(result);\n    } catch (e) {\n      const error = new InternalUserDatasourceError(\n        (e as any).message || `Opa, foi mal tivemos um problema ao salvar o usuário ${userId.toString()}`,\n        { ...(e as any), userId }\n      );\n      this.logger.error(error.message, error);\n      return new Left(error);\n    }\n  }\n}\n"],"names":[],"mappings":"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","debug_id":"0f00c9b6-c74c-53c8-8aab-cc1974c973b3"}