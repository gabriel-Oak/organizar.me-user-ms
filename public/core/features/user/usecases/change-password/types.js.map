{"version":3,"file":"types.js","sources":["core/features/user/usecases/change-password/types.ts"],"sourceRoot":"/","sourcesContent":["import BaseError from '../../../../utils/errors/base-error';\nimport { Either } from '../../../../utils/types';\nimport { InternalUserDatasourceError } from '../../datasources/internal-datasource/types';\n\nexport class ChangePasswordInvalidPassError extends BaseError {\n  public readonly type = 'change-password-invalid-pass';\n\n  constructor(message?: string) {\n    super(message ?? 'As senhas não batem, verifique se as digitou corretamente');\n  }\n}\n\nexport class ChangePasswordInvalidOldPassError extends ChangePasswordInvalidPassError {\n  constructor() {\n    super('A nova senha não pode ser igual a anterior');\n  }\n}\n\nexport type changePasswordErrors = InternalUserDatasourceError\n| ChangePasswordInvalidPassError\n| ChangePasswordInvalidOldPassError;\n\nexport interface ChangePasswordBody {\n  oldPassword: string;\n  newPassword: string;\n}\n\nexport interface ChangePasswordPayload extends ChangePasswordBody {\n  userId: string;\n}\n\nexport interface IChangePasswordUsecase {\n  execute: (payload: ChangePasswordPayload) => Promise<Either<changePasswordErrors, string>>\n}\n"],"names":[],"mappings":";;;;;;;;AAAA,qFAA4D;AAI5D,MAAa,8BAA+B,SAAQ,oBAAS;IAG3D,YAAY,OAAgB;QAC1B,KAAK,CAAC,OAAO,IAAI,2DAA2D,CAAC,CAAC;QAHhE,SAAI,GAAG,8BAA8B,CAAC;IAItD,CAAC;CACF;AAND,wEAMC;AAED,MAAa,iCAAkC,SAAQ,8BAA8B;IACnF;QACE,KAAK,CAAC,4CAA4C,CAAC,CAAC;IACtD,CAAC;CACF;AAJD,8EAIC","debug_id":"c24bbc98-c409-5a4b-93c5-7cac99fcd8f6"}