{"version":3,"file":"sign-user-token.js","sources":["core/features/user/usecases/sign-user-token/sign-user-token.ts"],"sourceRoot":"/","sourcesContent":["import UserSchema from '../../schemas/user-schema';\nimport { ISignUserTokenUsecase } from './types';\nimport jwt from 'jsonwebtoken';\nimport { JWT_SECRET } from '../../../../utils/constants';\nimport { ICacheService } from '../../../../utils/services/cache-service/types';\nimport Injectable from '../../../../utils/decorators/injectable';\nimport { inject } from 'inversify';\n\n@Injectable('ISignUserTokenUsecase')\nexport default class SignUserTokenUsecase implements ISignUserTokenUsecase {\n  constructor(\n    @inject('ICacheService')\n    private readonly chage: ICacheService\n  ) { }\n\n  execute(user: UserSchema) {\n    const newUser = new UserSchema({ ...user, password: undefined });\n    void this.chage.set(`user:${user._id!.toString()!}`, newUser.getProps());\n\n    return jwt.sign(newUser.getProps(), JWT_SECRET, { expiresIn: '24h' });\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,4EAAmD;AAEnD,gEAA+B;AAC/B,2DAAyD;AAEzD,yFAAiE;AACjE,yCAAmC;AAGpB,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IACvC,YAEmB,KAAoB;QAApB,UAAK,GAAL,KAAK,CAAe;IACnC,CAAC;IAEL,OAAO,CAAC,IAAgB;QACtB,MAAM,OAAO,GAAG,IAAI,qBAAU,CAAC,EAAE,GAAG,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;QACjE,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAI,CAAC,QAAQ,EAAG,EAAE,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEzE,OAAO,sBAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,sBAAU,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;IACxE,CAAC;CACF,CAAA;AAZoB,oBAAoB;IADxC,IAAA,oBAAU,EAAC,uBAAuB,CAAC;IAG/B,WAAA,IAAA,kBAAM,EAAC,eAAe,CAAC,CAAA;;GAFP,oBAAoB,CAYxC;kBAZoB,oBAAoB","debug_id":"7a276f3d-f518-5f50-ad16-ae39c98cd554"}