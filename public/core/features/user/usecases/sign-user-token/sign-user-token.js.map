{"version":3,"file":"sign-user-token.js","sources":["core/features/user/usecases/sign-user-token/sign-user-token.ts"],"sourceRoot":"/","sourcesContent":["import { ISignUserTokenUsecase } from './types';\nimport jwt from 'jsonwebtoken';\nimport { JWT_SECRET } from '../../../../utils/constants';\nimport { ICacheService } from '../../../../utils/services/cache-service/types';\nimport Injectable from '../../../../utils/decorators/injectable';\nimport { inject } from 'inversify';\nimport User from '../../entities/user';\n\n@Injectable('ISignUserTokenUsecase')\nexport default class SignUserTokenUsecase implements ISignUserTokenUsecase {\n  constructor(\n    @inject('ICacheService')\n    private readonly chage: ICacheService\n  ) { }\n\n  execute(user: User) {\n    const { email, name, id } = user;\n    void this.chage.set(`user:${user.id!}`, {\n      email, name, id\n    });\n\n    return jwt.sign({\n      email, name, id\n    }, JWT_SECRET, { expiresIn: '24h' });\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA,gEAA+B;AAC/B,2DAAyD;AAEzD,yFAAiE;AACjE,yCAAmC;AAIpB,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IACvC,YAEmB,KAAoB;QAApB,UAAK,GAAL,KAAK,CAAe;IACnC,CAAC;IAEL,OAAO,CAAC,IAAU;QAChB,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;QACjC,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,EAAG,EAAE,EAAE;YACtC,KAAK,EAAE,IAAI,EAAE,EAAE;SAChB,CAAC,CAAC;QAEH,OAAO,sBAAG,CAAC,IAAI,CAAC;YACd,KAAK,EAAE,IAAI,EAAE,EAAE;SAChB,EAAE,sBAAU,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;IACvC,CAAC;CACF,CAAA;AAhBoB,oBAAoB;IADxC,IAAA,oBAAU,EAAC,uBAAuB,CAAC;IAG/B,WAAA,IAAA,kBAAM,EAAC,eAAe,CAAC,CAAA;;GAFP,oBAAoB,CAgBxC;kBAhBoB,oBAAoB","debug_id":"1d69bc63-0fd3-59e6-9ca4-8fee7a0c2d74"}