{"version":3,"file":"types.js","sources":["core/features/user/usecases/insert-user/types.ts"],"sourceRoot":"/","sourcesContent":["import BaseError from '../../../../utils/errors/base-error';\nimport { Either } from '../../../../utils/types';\nimport { InternalUserDatasourceError } from '../../datasources/internal-datasource/types'\nimport User, { UserProps } from '../../entities/user';\n\nexport class InsertUserAlreadyExist extends BaseError {\n  public readonly type = 'insert-user-already-exist';\n\n  constructor() {\n    super('Um usuário com esse email já existe, tente um email diferente');\n  }\n}\n\nexport type insertUserErrors = InternalUserDatasourceError\n| InsertUserAlreadyExist;\n\nexport interface IInsertUserUsecase {\n  execute: (user: Omit<UserProps, 'id'>) => Promise<Either<insertUserErrors, User>>;\n}\n"],"names":[],"mappings":";;;;;;;;AAAA,qFAA4D;AAK5D,MAAa,sBAAuB,SAAQ,oBAAS;IAGnD;QACE,KAAK,CAAC,+DAA+D,CAAC,CAAC;QAHzD,SAAI,GAAG,2BAA2B,CAAC;IAInD,CAAC;CACF;AAND,wDAMC","debug_id":"f3626dfd-a03c-539b-8969-ef5128eed785"}