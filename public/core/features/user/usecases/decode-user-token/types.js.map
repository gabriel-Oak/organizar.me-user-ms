{"version":3,"file":"types.js","sources":["core/features/user/usecases/decode-user-token/types.ts"],"sourceRoot":"/","sourcesContent":["import BaseError from '../../../../utils/errors/base-error';\r\nimport { Either } from '../../../../utils/types';\r\nimport { InternalUserDatasourceError } from '../../datasources/internal-datasource/types';\r\nimport UserModel from '../../models/user-model';\r\n\r\nexport class DecodeUserInvalidTokenError extends BaseError {\r\n  public readonly type = 'decode-user-invalid-token';\r\n  constructor() {\r\n    super('Sorry token format is not valid, try to sing in again');\r\n  }\r\n}\r\n\r\nexport class DecodeUserNotFoundError extends BaseError {\r\n  public readonly type = 'decode-user-not-found';\r\n  constructor() {\r\n    super('UserModel not found, try to sing in again');\r\n  }\r\n}\r\n\r\nexport type decodeUserTokenErrors = DecodeUserInvalidTokenError\r\n| DecodeUserNotFoundError\r\n| InternalUserDatasourceError\r\n\r\nexport interface IDecodeUserTokenUsecase {\r\n  execute: (token: string) => Promise<Either<decodeUserTokenErrors, UserModel>>;\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAA,qFAA4D;AAK5D,MAAa,2BAA4B,SAAQ,oBAAS;IAExD;QACE,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAFjD,SAAI,GAAG,2BAA2B,CAAC;IAGnD,CAAC;CACF;AALD,kEAKC;AAED,MAAa,uBAAwB,SAAQ,oBAAS;IAEpD;QACE,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAFrC,SAAI,GAAG,uBAAuB,CAAC;IAG/C,CAAC;CACF;AALD,0DAKC","debug_id":"49ad2831-e532-5980-a2c9-9fffb7585d6c"}