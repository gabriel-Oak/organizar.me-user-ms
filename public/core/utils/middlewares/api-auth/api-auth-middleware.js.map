{"version":3,"file":"api-auth-middleware.js","sources":["core/utils/middlewares/api-auth/api-auth-middleware.ts"],"sourceRoot":"/","sourcesContent":["import { FastifyRequest, FastifyReply } from 'fastify';\nimport { IApiAuthMiddleware } from './types';\nimport { API_TOKEN } from '../../constants';\nimport { ILoggerService } from '../../services/logger-service/types';\nimport HttpError from '../../errors/http-error';\nimport autoBind from '../../helpers/auto-bind';\n\nexport default class ApiAuthMiddleware implements IApiAuthMiddleware {\n  constructor(\n    private readonly logger: ILoggerService\n  ) { autoBind(this); }\n\n  async execute(request: FastifyRequest, reply: FastifyReply): Promise<void> {\n    const apiToken = request.headers['api-token'];\n    if (apiToken !== API_TOKEN) {\n      const error = new HttpError({\n        statusCode: 401,\n        message: 'Acesso não autorizado'\n      });\n\n      this.logger.warn('Tentativa de acesso não permitida', {\n        ip: request.ip,\n        apiToken\n      });\n\n      await reply.code(error.statusCode).send(error);\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAEA,+CAA4C;AAE5C,yEAAgD;AAChD,wEAA+C;AAE/C,MAAqB,iBAAiB;IACpC,YACmB,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;QACrC,IAAA,mBAAQ,EAAC,IAAI,CAAC,CAAC;IAAC,CAAC;IAErB,KAAK,CAAC,OAAO,CAAC,OAAuB,EAAE,KAAmB;QACxD,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,QAAQ,KAAK,qBAAS,EAAE,CAAC;YAC3B,MAAM,KAAK,GAAG,IAAI,oBAAS,CAAC;gBAC1B,UAAU,EAAE,GAAG;gBACf,OAAO,EAAE,uBAAuB;aACjC,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mCAAmC,EAAE;gBACpD,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,QAAQ;aACT,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;CACF;AArBD,oCAqBC","debug_id":"632ee306-e543-5021-aad1-0fa02a29a754"}