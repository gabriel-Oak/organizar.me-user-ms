{"version":3,"file":"index.js","sources":["core/utils/services/cache-service/index.ts"],"sourceRoot":"/","sourcesContent":["import Redis, { Redis as RedisClient } from 'ioredis';\nimport { REDIS_HOST, REDIS_PASS, REDIS_PORT } from '../../constants';\nimport createLoggerService from '../logger-service';\nimport CacheService from './cache-service';\nimport { ICacheService } from './types';\nimport createContainer from '../../decorators/container';\n\nlet instance: ICacheService;\n\nconst createCacheService = (): ICacheService => {\n  if (!instance) {\n    instance = new CacheService(new Redis({\n      port: +REDIS_PORT!,\n      host: REDIS_HOST,\n      password: REDIS_PASS,\n      keyPrefix: 'cache'\n    }), createLoggerService());\n  }\n  return instance;\n}\n\nexport default createCacheService;\n\ncreateContainer().bind<RedisClient>('RedisClient')\n  .toDynamicValue(() => new Redis({\n    port: +REDIS_PORT!,\n    host: REDIS_HOST,\n    password: REDIS_PASS,\n    keyPrefix: 'cache'\n  }));\n"],"names":[],"mappings":";;;;;;;AAAA,sDAAsD;AACtD,+CAAqE;AACrE,uEAAoD;AACpD,oEAA2C;AAE3C,2EAAyD;AAEzD,IAAI,QAAuB,CAAC;AAE5B,MAAM,kBAAkB,GAAG,GAAkB,EAAE;IAC7C,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,QAAQ,GAAG,IAAI,uBAAY,CAAC,IAAI,iBAAK,CAAC;YACpC,IAAI,EAAE,CAAC,sBAAW;YAClB,IAAI,EAAE,sBAAU;YAChB,QAAQ,EAAE,sBAAU;YACpB,SAAS,EAAE,OAAO;SACnB,CAAC,EAAE,IAAA,wBAAmB,GAAE,CAAC,CAAC;IAC7B,CAAC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAA;AAED,kBAAe,kBAAkB,CAAC;AAElC,IAAA,mBAAe,GAAE,CAAC,IAAI,CAAc,aAAa,CAAC;KAC/C,cAAc,CAAC,GAAG,EAAE,CAAC,IAAI,iBAAK,CAAC;IAC9B,IAAI,EAAE,CAAC,sBAAW;IAClB,IAAI,EAAE,sBAAU;IAChB,QAAQ,EAAE,sBAAU;IACpB,SAAS,EAAE,OAAO;CACnB,CAAC,CAAC,CAAC","debug_id":"aa8a0fa0-ed85-50ae-b797-23fb793876d5"}