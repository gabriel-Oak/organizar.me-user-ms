#!/usr/bin/env bash

# Create a regex for a conventional commit.
commit_types="(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|wip)"
convetional_commit_regex="^${commit_types}(\([a-z \-]+\))?!?: .+$"

# Get the commit message (the parameter we're given is just the path to the
# temporary file which holds the message).
commit_message=$(cat "$1")

# Check the message, if we match, all good baby.
if [[ "$commit_message" =~ $convetional_commit_regex ]]; then
   echo -e "\e[32mA mensagem do commit est√° seguindo os padr√µes convencionais ü§ì\e[0m"
   exit 0
fi

# Uh-oh, this is not a conventional commit, show an example and link to the spec.
echo -e "\e[31mA mensagem do commit n√£o est√° seguindo os padr√µes convencionais üòê\e[0m"
echo "Um exemplo de uma mensagem v√°lida: "
echo "  feat(login): add the 'remember me' button"
echo "Mais detalhes em: https://www.conventionalcommits.org/en/v1.0.0/#summary"
echo "***********************************************************************"
echo "Aqui esta uma lista dos tipos de commits v√°lidos : ${commit_types}"
echo "  <type>: <subject> max 50char ex :- fix: invalid request for login api"
echo "  <type(<scope>):> <subject> (Max 50 char) - <scope> is option ex: - fix(user): email address is empty on profile api"
echo "***********************************************************************"

exit 1